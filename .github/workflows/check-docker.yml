name: build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build binary
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          artifact_name: check-docker
          asset_name: check-docker-x86_64-unknown-linux-gnu
        - os: ubuntu-latest
          target: aarch64-unknown-linux-gnu
          artifact_name: check-docker
          asset_name: check-docker-aarch64-unknown-linux-gnu

        - os: macos-latest
          target: x86_64-apple-darwin
          artifact_name: check-docker
          asset_name: check-docker-x86_64-apple-darwin
        - os: macos-latest
          target: aarch64-apple-darwin
          artifact_name: check-docker
          asset_name: check-docker-aarch64-apple-darwin
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          extension: .exe
          asset_name: check-docker-x86_64-pc-windows-msvc
        # - os: windows-latest-arm64
        #   target: aarch64-pc-windows-msvc
        #   extension: .exe
        #   asset_name: check-docker-aarch64-pc-windows-msvc


    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --manifest-path check-docker/Cargo.toml


# steps:
# - name: Checkout repository
#   uses: actions/checkout@v4

# # Rust環境の構築
# - name: Rust環境の構築
#   uses: actions-rs/toolchain@v1
#   with:
#     toolchain: stable
#     override: true
